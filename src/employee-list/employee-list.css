/* View switching: Default is table view */
.list-view-wrapper .data-table { display: table; }
.list-view-wrapper .cards-grid { display: none !important; }
/* Ensure cards are hidden unless cards view is active */
.list-view-wrapper:not([data-view="cards"]) .cards-grid { display: none !important; }

/* Card view: hide table, show cards */
.list-view-wrapper[data-view="cards"] .data-table { display: none !important; }
.list-view-wrapper[data-view="cards"] .cards-grid { display: grid !important; }

page-container.no-container-style::part(content) {
    background: none;
    box-shadow: none;
    padding: var(--spacing-l);
}
.header-row { display: flex; align-items: center; justify-content: space-between; width: 100%; }
.page-title { color: var(--color-primary); font-size: var(--font-size-large); font-weight: 600; margin: var(--spacing-none); }
.toolbar { display: flex; align-items: center; justify-content: space-between; gap: var(--spacing-m); }
.search { flex: 1; display: flex; }
.search input { width: 100%; padding: var(--spacing-s) var(--spacing-m); border: var(--border-width-thin) solid var(--color-border); border-radius: var(--border-radius-base); font-size: var(--font-size-base); }
.view-toggles { display: inline-flex; gap: var(--spacing-s); align-items: center; }
.icon-btn { background: transparent; border: none; padding: var(--spacing-xs); border-radius: var(--border-radius-base); cursor: pointer; transition: background-color var(--transition-speed-fast), opacity var(--transition-speed-fast); }
.icon-btn.active { background: transparent; }
.toggle-icon { display: block; }
/* list icon as SVG mask */
.toggle-icon.list { width: var(--size-toggle-list-icon-width); height: var(--size-toggle-list-icon-height); -webkit-mask: url('../../assets/icons/list_icon.svg') no-repeat center / contain; mask: url('../../assets/icons/list_icon.svg') no-repeat center / contain; background: currentColor; }
/* grid icon as SVG mask */
.toggle-icon.grid { width: var(--size-toggle-grid-icon); height: var(--size-toggle-grid-icon); -webkit-mask: url('../../assets/icons/square_list_icon.svg') no-repeat center / contain; mask: url('../../assets/icons/square_list_icon.svg') no-repeat center / contain; background: currentColor; }
/* default dim state */
.icon-btn:not(.active) .toggle-icon { color: var(--color-primary-muted); }
/* active filled orange */
.icon-btn.active .toggle-icon { color: var(--color-primary); }

.data-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: var(--spacing-none);
    border: var(--border-width-thin) solid var(--color-border-subtle);
    border-radius: var(--border-radius-base);
    overflow: hidden;
    /* Custom exception: fixed checkbox column width exposed as a local token
       so we can align bulk controls exactly with checkbox centers */
    --checkbox-col-width: 36px;
}
.data-table th, .data-table td {
    padding: 7px;
    border-bottom: var(--border-width-thin) solid var(--color-border-subtle);
    text-align: left;
    font-size: var(--font-size-base);
}
.select-all-wrapper { display: inline-flex; align-items: center; gap: var(--spacing-s); }
.header-delete { background: transparent; border: none; color: var(--color-primary); cursor: pointer; }
.header-delete[disabled] { opacity: var(--opacity-disabled); cursor: not-allowed; }
/* Show bulk delete inside first header cell when any row is selected */
.data-table th.first-name-filter { position: relative; }
.data-table th.first-name-filter .bulk-controls { position: absolute; left: calc((-0.5 * var(--checkbox-col-width)) - var(--spacing-s) - var(--spacing-xs)); top: 50%; transform: translate(-50%, -50%); display: grid; grid-template-rows: auto auto; justify-items: center; gap: var(--spacing-xxs, 0.125rem); pointer-events: none; }
.data-table th.first-name-filter .bulk-count { color: var(--color-text-dark); font-size: var(--font-size-base); line-height: 1; }
.data-table th.first-name-filter .icon-trash { background: transparent; border: none; color: var(--color-primary); cursor: pointer; width: var(--size-action-btn); height: var(--size-action-btn); display: inline-flex; align-items: center; justify-content: center; pointer-events: auto; }
.data-table th.first-name-filter .icon-trash svg { width: var(--size-icon-md); height: var(--size-icon-md); display: block; }
.data-table th {
    background-color: var(--color-surface);
    color: var(--color-primary);
    font-weight: bold;
    text-transform: none;
}

.data-table thead th { color: var(--color-primary) !important; }
.data-table thead tr:first-child th { border-bottom: none; }
.filters-row th { background: var(--color-surface); padding: var(--spacing-xs) var(--spacing-s); }
.col-filter { width: 100%; display: block; }
.actions-cell .action-btn { padding: 0; width: var(--size-action-btn); height: var(--size-action-btn); display: inline-flex; align-items: center; justify-content: center; background: transparent; border: none; border-radius: var(--border-radius-base); cursor: pointer; color: var(--color-primary); transition: background-color var(--transition-speed-fast), color var(--transition-speed-fast); }
.actions-cell .action-btn:hover { background-color: var(--color-background-light); }
.actions-cell .action-btn svg { width: var(--size-icon-md); height: var(--size-icon-md); display: block; }
.actions-cell { white-space: nowrap; }
.actions-cell .action-btn + .action-btn { margin-left: var(--spacing-s); }
.actions-cell .action-btn.delete { color: var(--color-primary); }
.pagination-controls {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: -15px;
    margin-bottom: var(--spacing-l);
    gap: var(--spacing-m);
}
.pagination-controls .pager-btn,
.pagination-controls .pager-num { width: var(--pagination-item-size); height: var(--pagination-item-size); display: inline-flex; align-items: center; justify-content: center; border-radius: 999px; border: none; background: transparent; cursor: pointer; user-select: none; }
.pagination-controls .pager-num.active { background: var(--color-primary); color: var(--color-surface); border-color: transparent; font-weight: 600; }
.pagination-controls .arrow { width: var(--size-icon-sm); height: var(--size-icon-sm); display: block; }
.pagination-controls .prev .arrow { transform: scaleX(-1); }
.pagination-controls button:disabled {
    opacity: var(--opacity-disabled);
    cursor: not-allowed;
}

.empty-state {
    height: var(--table-empty-state-height);
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
}

/* Card view layout */
.cards-grid {
    gap: 3rem;
    grid-template-columns: repeat(2, minmax(0, 450px));
    justify-content: center;
}
.card { background-color: var(--color-surface); border-radius: var(--border-radius-base); box-shadow: var(--shadow-subtle); padding: var(--spacing-l); border: var(--border-width-thin) solid var(--color-border-subtle); min-height: var(--card-min-height); }
.card-grid { display: grid; grid-template-columns: 1fr 1fr; gap: var(--spacing-xl); }
.card h3 { margin: var(--spacing-none); }
.meta { color: var(--color-text-dark); opacity: 0.8; font-size: var(--font-size-small); }
.card .field-label { font-weight: var(--font-weight-regular); opacity: 0.8; color: var(--color-text-muted); font-size: var(--font-size-base); letter-spacing: 0.2px; }
.card .field-label::after { content: ':'; }
/* Make values visually stronger than labels to match design */
.card .field-label + div { font-weight: var(--font-weight-semibold); }
/* Stronger value color for First/Last Name in cards */
.card .card-grid > div:nth-child(1) .field-label + div,
.card .card-grid > div:nth-child(2) .field-label + div {
    color: var(--color-text-strong);
}
.card .actions {
    margin-top: var(--spacing-l);
    display: flex;
    gap: var(--spacing-m);
    justify-content: flex-start;
}
.card .actions app-button {
    flex: 0 1 auto; /* Do not grow, allow shrinking */
}
.card .actions app-button::part(button) {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--spacing-s);
    padding: var(--spacing-s) var(--spacing-m);
}
.card .actions .btn-icon {
    width: var(--size-icon-sm);
    height: var(--size-icon-sm);
}
.card .actions app-button[variant="danger"]::part(button) {
    background-color: var(--color-primary);
    color: var(--color-surface);
    border: none;
}
.card .actions app-button[variant="danger"] .btn-icon {
    color: var(--color-surface);
}
.card .actions app-button[variant="secondary"]::part(button) {
    background-color: #4f4b8f;
    color: var(--color-surface);
    border: none;
}

@media (max-width: 768px) {
    .cards-grid {
        grid-template-columns: 1fr;
    }
}


/* Layout tweaks: narrow the checkbox column and tighten first-name padding
   to free up space so phone numbers can stay on one line */
.data-table th:first-child,
.data-table td:first-child {
    width: 36px; /* Custom exception: fixed width to align checkbox column */
    padding-left: var(--spacing-xs);
    padding-right: var(--spacing-xs);
}

.data-table th:nth-child(2),
.data-table td:nth-child(2) {
    padding-left: var(--spacing-s);
}

.data-table td:nth-child(2),
.data-table td:nth-child(3) {
    color: var(--color-text-strong);
}

/* Keep phone numbers on a single line */
.data-table th:nth-child(6),
.data-table td:nth-child(6) {
    white-space: nowrap;
}
